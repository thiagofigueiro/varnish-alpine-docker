---
variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
#
include:
  - template: Container-Scanning.gitlab-ci.yml
#
docker-build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker build --pull -t "${IMAGE_TAG}" .
    - docker push "${IMAGE_TAG}"
#
.test_template: &test_template
  variables:
    VARNISH_BACKEND_PORT: 80
# FIXME: VARNISH_BACKEND_ADDRESS: $(dig +short A $VARNISH_BACKEND_HOSTNAME)
#    VARNISH_BACKEND_HOSTNAME: 'set this on the job definition'
#    PYTEST_ARGS: 'set this on the job definition; e.g. tests/test_integration.py::TestInstagram'
  image: python:3.8-alpine
  services:
    - name: "${IMAGE_TAG}"
      alias: varnish-alpine-docker
  stage: test
  script:
    - pip install -r requirements.in
    - pytest --junitxml=junit.xml --color=yes -v "${PYTEST_ARGS}"
  artifacts:
    reports:
      junit: junit.xml
#
test-google:
  <<: *test_template
  variables:
    PYTEST_ARGS: tests/test_integration.py::TestGoogle
    VARNISH_BACKEND_HOSTNAME: www.google.com
    VARNISH_BACKEND_ADDRESS: 216.239.34.117
#
test-instagram:
  <<: *test_template
  variables:
    PYTEST_ARGS: tests/test_integration.py::TestInstagram
    VARNISH_BACKEND_HOSTNAME: www.instagram.com
    VARNISH_BACKEND_ADDRESS: 157.240.8.174
